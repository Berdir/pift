<?php
// $Id$

/**
 * Implementation of hook_schema().
 */
function pift_schema() {
  $schema['pift_test'] = array(
    'description' => t('Stores test results.'),
    'fields' => array(
      'test_id' => array(
        'description' => t('Unique test ID.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => t('Status of the test.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'message' => array(
        'description' => t('Summary message of test result.'),
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'last_tested' => array(
        'description' => t('Timestamp of last time tested.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('test_id'),
    'indexes' => array(
      'status' => array('status'),
      'last_tested' => array('last_tested'),
    ),
  );
  $schema['pift_file'] = array(
    'description' => t('Relates files to tests.'),
    'fields' => array(
      'fid' => array(
        'description' => t('Reference to file ID.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'test_id' => array(
        'description' => t('Reference to test ID.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('fid', 'test_id'),
  );
  $schema['pift_release'] = array(
    'description' => t('Relates releases to tests.'),
    'fields' => array(
      'rid' => array(
        'description' => t('Reference to release NID.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'test_id' => array(
        'description' => t('Reference to test ID.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('rid', 'test_id'),
  );
  $schema['pift_project'] = array(
    'description' => t('Store project testing preference.'),
    'fields' => array(
      'project_nid' => array(
        'description' => t('Reference to project NID.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('project_nid'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function pift_install() {
  // Create tables.
  drupal_install_schema('pift');

  db_query("UPDATE {system} SET weight = 3 WHERE  name = 'pift'");
}

/**
 * Implementation of hook_uninstall().
 */
function pift_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('pift');

  $vars = array(
    'pift_frequency',
    'pift_key',
    'pift_server',
    'pift_description',
    'pift_followup',
    'pift_regex',
    'pift_status',
    'pift_retest',
  );

  foreach ($vars as $var) {
    variable_del($var);
  }
}
